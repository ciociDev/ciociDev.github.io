///lista pozitii
var listaPoz = new Array();
listaPoz.push(15022);
listaPoz.push(14979);
listaPoz.push(14900);
listaPoz.push(14849);
listaPoz.push(14826);
listaPoz.push(14803);
listaPoz.push(14786);
listaPoz.push(14759);
listaPoz.push(14744);
listaPoz.push(14711);
listaPoz.push(14709);
listaPoz.push(14689);
listaPoz.push(14648);
listaPoz.push(14636);
listaPoz.push(14528);
listaPoz.push(14390);
listaPoz.push(14360);
listaPoz.push(14340);
listaPoz.push(14125);
listaPoz.push(14073);
listaPoz.push(14013);
listaPoz.push(14005);
listaPoz.push(14003);
listaPoz.push(13997);
listaPoz.push(13842);
listaPoz.push(13829);
listaPoz.push(13812);
listaPoz.push(13759);
listaPoz.push(13757);
listaPoz.push(13753);
listaPoz.push(13739);
listaPoz.push(13653);
listaPoz.push(13645);
listaPoz.push(13549);
listaPoz.push(13484);
listaPoz.push(13463);
listaPoz.push(13455);
listaPoz.push(13446);
listaPoz.push(13323);
listaPoz.push(13173);
listaPoz.push(13130);
listaPoz.push(13121);
listaPoz.push(13116);
listaPoz.push(13098);
listaPoz.push(13020);
listaPoz.push(13016);
listaPoz.push(12958);
listaPoz.push(12951);
listaPoz.push(12803);
listaPoz.push(12710);
listaPoz.push(12678);
listaPoz.push(12557);
listaPoz.push(12478);
listaPoz.push(12385);
listaPoz.push(12375);
listaPoz.push(12233);
listaPoz.push(12168);
listaPoz.push(12058);
listaPoz.push(12050);
listaPoz.push(11737);
listaPoz.push(11677);
listaPoz.push(11631);
listaPoz.push(11538);
listaPoz.push(11487);
listaPoz.push(11465);
listaPoz.push(11405);
listaPoz.push(11387);
listaPoz.push(11294);
listaPoz.push(11272);
listaPoz.push(11263);
listaPoz.push(11173);
listaPoz.push(11162);
listaPoz.push(11105);
listaPoz.push(11093);
listaPoz.push(11028);
listaPoz.push(10796);
listaPoz.push(10733);
listaPoz.push(10671);
listaPoz.push(10636);
listaPoz.push(10596);
listaPoz.push(10589);
listaPoz.push(10526);
listaPoz.push(10517);
listaPoz.push(10477);
listaPoz.push(10427);
listaPoz.push(10415);
listaPoz.push(10238);
listaPoz.push(9967);
listaPoz.push(9941);
listaPoz.push(9923);
listaPoz.push(9900);
listaPoz.push(9808);
listaPoz.push(9787);
listaPoz.push(9776);
listaPoz.push(9761);
listaPoz.push(9718);
listaPoz.push(9705);
listaPoz.push(9573);
listaPoz.push(9566);
listaPoz.push(9555);
listaPoz.push(9445);
listaPoz.push(9429);
listaPoz.push(9374);
listaPoz.push(9358);
listaPoz.push(9335);
listaPoz.push(9263);
listaPoz.push(9248);
listaPoz.push(9177);
listaPoz.push(9089);
listaPoz.push(9088);
listaPoz.push(9061);
listaPoz.push(9009);
listaPoz.push(9003);
listaPoz.push(8976);
listaPoz.push(8971);
listaPoz.push(8952);
listaPoz.push(8938);
listaPoz.push(8936);
listaPoz.push(8916);
listaPoz.push(8893);
listaPoz.push(8890);
listaPoz.push(8860);
listaPoz.push(8750);
listaPoz.push(8707);
listaPoz.push(8641);
listaPoz.push(8499);
listaPoz.push(8452);
listaPoz.push(8439);
listaPoz.push(8382);
listaPoz.push(8270);
listaPoz.push(8229);
listaPoz.push(8155);
listaPoz.push(8107);
listaPoz.push(8058);
listaPoz.push(7974);
listaPoz.push(7965);
listaPoz.push(7892);
listaPoz.push(7884);
listaPoz.push(7850);
listaPoz.push(7767);
listaPoz.push(7683);
listaPoz.push(7573);
listaPoz.push(7561);
listaPoz.push(7517);
listaPoz.push(7507);
listaPoz.push(7496);
listaPoz.push(7478);
listaPoz.push(7459);
listaPoz.push(7458);
listaPoz.push(7276);
listaPoz.push(7130);
listaPoz.push(7028);
listaPoz.push(7000);
listaPoz.push(6994);
listaPoz.push(6863);
listaPoz.push(6839);
listaPoz.push(6833);
listaPoz.push(6783);
listaPoz.push(6753);
listaPoz.push(6725);
listaPoz.push(6688);
listaPoz.push(6634);
listaPoz.push(6407);
listaPoz.push(6308);
listaPoz.push(6288);
listaPoz.push(6274);
listaPoz.push(6218);
listaPoz.push(6172);
listaPoz.push(6165);
listaPoz.push(6102);
listaPoz.push(6085);
listaPoz.push(6000);
listaPoz.push(5999);
listaPoz.push(5974);
listaPoz.push(5927);
listaPoz.push(5892);
listaPoz.push(5788);
listaPoz.push(5741);
listaPoz.push(5599);
listaPoz.push(5591);
listaPoz.push(5455);
listaPoz.push(5370);
listaPoz.push(5369);
listaPoz.push(5321);
listaPoz.push(5308);
listaPoz.push(5305);
listaPoz.push(5301);
listaPoz.push(5192);
listaPoz.push(5159);
listaPoz.push(5138);
listaPoz.push(5048);
listaPoz.push(4987);
listaPoz.push(4944);
listaPoz.push(4905);
listaPoz.push(4891);
listaPoz.push(4787);
listaPoz.push(4783);
listaPoz.push(4713);
listaPoz.push(4555);
listaPoz.push(4478);
listaPoz.push(4456);
listaPoz.push(4434);
listaPoz.push(4405);
listaPoz.push(4343);
listaPoz.push(4317);
listaPoz.push(4292);
listaPoz.push(4223);
listaPoz.push(4166);
listaPoz.push(4121);
listaPoz.push(3973);
listaPoz.push(3965);
listaPoz.push(3933);
listaPoz.push(3923);
listaPoz.push(3863);
listaPoz.push(3819);
listaPoz.push(3801);
listaPoz.push(3797);
listaPoz.push(3736);
listaPoz.push(3713);
listaPoz.push(3691);
listaPoz.push(3626);
listaPoz.push(3537);
listaPoz.push(3479);
listaPoz.push(3447);
listaPoz.push(3440);
listaPoz.push(3328);
listaPoz.push(3298);
listaPoz.push(3258);
listaPoz.push(3173);
listaPoz.push(3144);
listaPoz.push(3134);
listaPoz.push(3092);
listaPoz.push(3064);
listaPoz.push(3040);
listaPoz.push(2918);
listaPoz.push(2874);
listaPoz.push(2870);
listaPoz.push(2840);
listaPoz.push(2837);
listaPoz.push(2780);
listaPoz.push(2774);
listaPoz.push(2773);
listaPoz.push(2639);
listaPoz.push(2578);
listaPoz.push(2563);
listaPoz.push(2493);
listaPoz.push(2476);
listaPoz.push(2459);
listaPoz.push(2432);
listaPoz.push(2376);
listaPoz.push(2267);
listaPoz.push(2186);
listaPoz.push(2132);
listaPoz.push(2060);
listaPoz.push(2059);
listaPoz.push(2058);
listaPoz.push(2040);
listaPoz.push(2013);
listaPoz.push(1981);
listaPoz.push(1885);
listaPoz.push(1884);
listaPoz.push(1694);
listaPoz.push(1686);
listaPoz.push(1625);
listaPoz.push(1576);
listaPoz.push(1555);
listaPoz.push(1349);
listaPoz.push(1250);
listaPoz.push(1241);
listaPoz.push(1182);
listaPoz.push(896);
listaPoz.push(749);
listaPoz.push(712);
listaPoz.push(708);
listaPoz.push(445);
listaPoz.push(201);



///lista medii
var listaMed = new Array();
listaMed.push(4.61);
listaMed.push(4.68);
listaMed.push(4.81);
listaMed.push(4.89);
listaMed.push(4.92);
listaMed.push(4.96);
listaMed.push(4.98);
listaMed.push(5.01);
listaMed.push(5.03);
listaMed.push(5.07);
listaMed.push(5.07);
listaMed.push(5.11);
listaMed.push(5.16);
listaMed.push(5.18);
listaMed.push(5.29);
listaMed.push(5.44);
listaMed.push(5.47);
listaMed.push(5.48);
listaMed.push(5.70);
listaMed.push(5.76);
listaMed.push(5.81);
listaMed.push(5.82);
listaMed.push(5.82);
listaMed.push(5.83);
listaMed.push(5.99);
listaMed.push(6.00);
listaMed.push(6.02);
listaMed.push(6.07);
listaMed.push(6.07);
listaMed.push(6.08);
listaMed.push(6.09);
listaMed.push(6.16);
listaMed.push(6.16);
listaMed.push(6.22);
listaMed.push(6.27);
listaMed.push(6.29);
listaMed.push(6.30);
listaMed.push(6.31);
listaMed.push(6.40);
listaMed.push(6.50);
listaMed.push(6.53);
listaMed.push(6.53);
listaMed.push(6.54);
listaMed.push(6.55);
listaMed.push(6.61);
listaMed.push(6.62);
listaMed.push(6.65);
listaMed.push(6.65);
listaMed.push(6.74);
listaMed.push(6.79);
listaMed.push(6.81);
listaMed.push(6.89);
listaMed.push(6.93);
listaMed.push(7.00);
listaMed.push(7.00);
listaMed.push(7.08);
listaMed.push(7.11);
listaMed.push(7.16);
listaMed.push(7.16);
listaMed.push(7.30);
listaMed.push(7.32);
listaMed.push(7.35);
listaMed.push(7.38);
listaMed.push(7.41);
listaMed.push(7.42);
listaMed.push(7.44);
listaMed.push(7.45);
listaMed.push(7.48);
listaMed.push(7.49);
listaMed.push(7.50);
listaMed.push(7.53);
listaMed.push(7.53);
listaMed.push(7.55);
listaMed.push(7.56);
listaMed.push(7.58);
listaMed.push(7.66);
listaMed.push(7.68);
listaMed.push(7.70);
listaMed.push(7.71);
listaMed.push(7.73);
listaMed.push(7.73);
listaMed.push(7.75);
listaMed.push(7.75);
listaMed.push(7.76);
listaMed.push(7.78);
listaMed.push(7.79);
listaMed.push(7.84);
listaMed.push(7.92);
listaMed.push(7.93);
listaMed.push(7.93);
listaMed.push(7.94);
listaMed.push(7.97);
listaMed.push(7.97);
listaMed.push(7.98);
listaMed.push(7.98);
listaMed.push(8.00);
listaMed.push(8.00);
listaMed.push(8.04);
listaMed.push(8.04);
listaMed.push(8.04);
listaMed.push(8.08);
listaMed.push(8.08);
listaMed.push(8.10);
listaMed.push(8.10);
listaMed.push(8.11);
listaMed.push(8.13);
listaMed.push(8.13);
listaMed.push(8.15);
listaMed.push(8.17);
listaMed.push(8.17);
listaMed.push(8.18);
listaMed.push(8.19);
listaMed.push(8.20);
listaMed.push(8.20);
listaMed.push(8.21);
listaMed.push(8.21);
listaMed.push(8.22);
listaMed.push(8.22);
listaMed.push(8.22);
listaMed.push(8.23);
listaMed.push(8.23);
listaMed.push(8.23);
listaMed.push(8.26);
listaMed.push(8.27);
listaMed.push(8.29);
listaMed.push(8.33);
listaMed.push(8.34);
listaMed.push(8.34);
listaMed.push(8.35);
listaMed.push(8.38);
listaMed.push(8.39);
listaMed.push(8.41);
listaMed.push(8.41);
listaMed.push(8.42);
listaMed.push(8.44);
listaMed.push(8.44);
listaMed.push(8.46);
listaMed.push(8.46);
listaMed.push(8.47);
listaMed.push(8.49);
listaMed.push(8.51);
listaMed.push(8.54);
listaMed.push(8.54);
listaMed.push(8.55);
listaMed.push(8.55);
listaMed.push(8.55);
listaMed.push(8.56);
listaMed.push(8.56);
listaMed.push(8.56);
listaMed.push(8.60);
listaMed.push(8.63);
listaMed.push(8.66);
listaMed.push(8.66);
listaMed.push(8.67);
listaMed.push(8.70);
listaMed.push(8.70);
listaMed.push(8.70);
listaMed.push(8.72);
listaMed.push(8.72);
listaMed.push(8.73);
listaMed.push(8.74);
listaMed.push(8.75);
listaMed.push(8.80);
listaMed.push(8.82);
listaMed.push(8.83);
listaMed.push(8.83);
listaMed.push(8.84);
listaMed.push(8.85);
listaMed.push(8.85);
listaMed.push(8.87);
listaMed.push(8.87);
listaMed.push(8.89);
listaMed.push(8.89);
listaMed.push(8.89);
listaMed.push(8.90);
listaMed.push(8.91);
listaMed.push(8.93);
listaMed.push(8.94);
listaMed.push(8.97);
listaMed.push(8.97);
listaMed.push(9.00);
listaMed.push(9.01);
listaMed.push(9.01);
listaMed.push(9.03);
listaMed.push(9.03);
listaMed.push(9.03);
listaMed.push(9.03);
listaMed.push(9.05);
listaMed.push(9.06);
listaMed.push(9.06);
listaMed.push(9.08);
listaMed.push(9.09);
listaMed.push(9.10);
listaMed.push(9.11);
listaMed.push(9.11);
listaMed.push(9.13);
listaMed.push(9.13);
listaMed.push(9.15);
listaMed.push(9.18);
listaMed.push(9.19);
listaMed.push(9.20);
listaMed.push(9.20);
listaMed.push(9.20);
listaMed.push(9.21);
listaMed.push(9.22);
listaMed.push(9.22);
listaMed.push(9.24);
listaMed.push(9.24);
listaMed.push(9.25);
listaMed.push(9.28);
listaMed.push(9.28);
listaMed.push(9.29);
listaMed.push(9.29);
listaMed.push(9.30);
listaMed.push(9.31);
listaMed.push(9.31);
listaMed.push(9.31);
listaMed.push(9.32);
listaMed.push(9.33);
listaMed.push(9.33);
listaMed.push(9.34);
listaMed.push(9.36);
listaMed.push(9.37);
listaMed.push(9.37);
listaMed.push(9.37);
listaMed.push(9.39);
listaMed.push(9.40);
listaMed.push(9.40);
listaMed.push(9.42);
listaMed.push(9.42);
listaMed.push(9.43);
listaMed.push(9.43);
listaMed.push(9.44);
listaMed.push(9.44);
listaMed.push(9.46);
listaMed.push(9.47);
listaMed.push(9.47);
listaMed.push(9.48);
listaMed.push(9.48);
listaMed.push(9.49);
listaMed.push(9.49);
listaMed.push(9.49);
listaMed.push(9.51);
listaMed.push(9.52);
listaMed.push(9.52);
listaMed.push(9.54);
listaMed.push(9.54);
listaMed.push(9.54);
listaMed.push(9.55);
listaMed.push(9.55);
listaMed.push(9.57);
listaMed.push(9.58);
listaMed.push(9.59);
listaMed.push(9.60);
listaMed.push(9.60);
listaMed.push(9.60);
listaMed.push(9.60);
listaMed.push(9.61);
listaMed.push(9.62);
listaMed.push(9.63);
listaMed.push(9.63);
listaMed.push(9.67);
listaMed.push(9.67);
listaMed.push(9.68);
listaMed.push(9.69);
listaMed.push(9.69);
listaMed.push(9.73);
listaMed.push(9.75);
listaMed.push(9.75);
listaMed.push(9.76);
listaMed.push(9.81);
listaMed.push(9.84);
listaMed.push(9.84);
listaMed.push(9.84);
listaMed.push(9.90);
listaMed.push(9.98);


///lista nume licee
var listaLic = new Array();
listaLic.push("Liceul Teoretic Bulgar Hristo Botev");
listaLic.push("Colegiul Tehnic Mihai Bravu");
listaLic.push("Liceul Teoretic Dante Alighieri");
listaLic.push("Liceul Tehnologic Dimitrie Gusti");
listaLic.push("Liceul Tehnologic Dragomir Hurmuzescu");
listaLic.push("Colegiul Tehnic Dimitrie Leonida");
listaLic.push("Colegiul Tehnic Anghel Saligny");
listaLic.push("Colegiul Tehnic Mircea Cel Batrân");
listaLic.push("Liceul Tehnologic Elie Radu");
listaLic.push("Colegiul Tehnic Mihai Bravu");
listaLic.push("Colegiul Tehnic Energetic");
listaLic.push("Liceul Tehnologic Petru Poni");
listaLic.push("Colegiul Tehnic Carol I");
listaLic.push("Colegiul Tehnic De Industrie Alimentara Dumitru Motoc");
listaLic.push("Colegiul Tehnic Dinicu Golescu");
listaLic.push("Colegiul Tehnic Anghel Saligny");
listaLic.push("Colegiul Tehnic Iuliu Maniu");
listaLic.push("Colegiul Tehnic Edmond Nicolau");
listaLic.push("Colegiul Tehnologic Viaceslav Harnaj");
listaLic.push("Liceul Teoretic Ady Endre");
listaLic.push("Colegiul Tehnic Energetic");
listaLic.push("Liceul Tehnologic Ion I.C. Bratianu");
listaLic.push("Colegiul Tehnic Anghel Saligny");
listaLic.push("Colegiul Tehnic Petru Maior");
listaLic.push("Liceul Tehnologic Constantin BrâncuSi");
listaLic.push("Colegiul Tehnologic Grigore Cerchez");
listaLic.push("Colegiul Tehnic Iuliu Maniu");
listaLic.push("Liceul Tehnologic Sfântul Pantelimon");
listaLic.push("Liceul Tehnologic Constantin BrâncuSi");
listaLic.push("Liceul Tehnologic De Metrologie Traian Vuia");
listaLic.push("Colegiul Tehnologic Grigore Cerchez");
listaLic.push("Liceul Tehnologic Elie Radu");
listaLic.push("Colegiul Tehnic Costin D. Nenitescu");
listaLic.push("Colegiul Tehnic Dimitrie Leonida");
listaLic.push("Colegiul Tehnic Gheorghe Asachi");
listaLic.push("Liceul Tehnologic Petru Poni");
listaLic.push("Colegiul Tehnic De PoSta Si Telecomunicatii Gheorghe Airinei");
listaLic.push("Liceul Tehnologic De Metrologie Traian Vuia");
listaLic.push("Colegiul Tehnic Media");
listaLic.push("Liceul Teoretic Bulgar Hristo Botev");
listaLic.push("Liceul Tehnologic De Metrologie Traian Vuia");
listaLic.push("Colegiul Tehnic Gheorghe Asachi");
listaLic.push("Colegiul Tehnic Costin D. Nenitescu");
listaLic.push("Colegiul Tehnic De Aeronautica Henri Coanda");
listaLic.push("Colegiul Tehnic Dinicu Golescu");
listaLic.push("Colegiul Tehnic Energetic");
listaLic.push("Liceul Tehnologic Dragomir Hurmuzescu");
listaLic.push("Colegiul Tehnic De PoSta Si Telecomunicatii Gheorghe Airinei");
listaLic.push("Liceul Teoretic Bulgar Hristo Botev");
listaLic.push("Colegiul Tehnic De PoSta Si Telecomunicatii Gheorghe Airinei");
listaLic.push("Colegiul Tehnologic Grigore Cerchez");
listaLic.push("Colegiul Tehnic Mircea Cel Batrân");
listaLic.push("Colegiul Tehnic Petru Maior");
listaLic.push("Colegiul Economic Viilor");
listaLic.push("Colegiul Tehnic Costin D. Nenitescu");
listaLic.push("Colegiul Economic Viilor");
listaLic.push("Liceul Tehnologic Ion I.C. Bratianu");
listaLic.push("Liceul Teoretic Dante Alighieri");
listaLic.push("Liceul Tehnologic Nikola Tesla");
listaLic.push("Colegiul Tehnic Iuliu Maniu");
listaLic.push("Colegiul Tehnic De Arhitectura Si Lucrari Publice Ioan N. Socolescu");
listaLic.push("Colegiul Tehnologic Viaceslav Harnaj");
listaLic.push("Colegiul Tehnic De Aeronautica Henri Coanda");
listaLic.push("Colegiul Tehnic Feroviar Mihai I");
listaLic.push("Colegiul Economic Viilor");
listaLic.push("Colegiul Tehnic Energetic");
listaLic.push("Liceul Teoretic Bulgar Hristo Botev");
listaLic.push("Colegiul Tehnologic Viaceslav Harnaj");
listaLic.push("Colegiul Tehnic Feroviar Mihai I");
listaLic.push("Colegiul Tehnic Carol I");
listaLic.push("Liceul Tehnologic Constantin BrâncuSi");
listaLic.push("Liceul Tehnologic Mircea Vulcanescu");
listaLic.push("Colegiul Tehnic Iuliu Maniu");
listaLic.push("Colegiul Tehnologic Grigore Cerchez");
listaLic.push("Liceul Tehnologic De Metrologie Traian Vuia");
listaLic.push("Liceul Tehnologic Mircea Vulcanescu");
listaLic.push("Liceul Tehnologic Dragomir Hurmuzescu");
listaLic.push("Colegiul Tehnic Costin D. Nenitescu");
listaLic.push("Colegiul Tehnic Dimitrie Leonida");
listaLic.push("Liceul Tehnologic Sfântul Pantelimon");
listaLic.push("Colegiul Tehnologic Grigore Cerchez");
listaLic.push("Colegiul Tehnic De PoSta Si Telecomunicatii Gheorghe Airinei");
listaLic.push("Liceul Teoretic Bulgar Hristo Botev");
listaLic.push("Colegiul Tehnic Mecanic Grivita");
listaLic.push("Colegiul Tehnic Mihai Bravu");
listaLic.push("Liceul Tehnologic De Metrologie Traian Vuia");
listaLic.push("Colegiul Tehnic De PoSta Si Telecomunicatii Gheorghe Airinei");
listaLic.push("Colegiul Tehnic Mihai Bravu");
listaLic.push("Colegiul Tehnic De Aeronautica Henri Coanda");
listaLic.push("Liceul Tehnologic Dimitrie Gusti");
listaLic.push("Liceul Tehnologic Sf. Antim Ivireanu");
listaLic.push("Liceul Teoretic Bulgar Hristo Botev");
listaLic.push("Liceul Tehnologic Sf. Antim Ivireanu");
listaLic.push("Liceul Dimitrie Paciurea");
listaLic.push("Colegiul Tehnic De Aeronautica Henri Coanda");
listaLic.push("Liceul Teoretic Decebal");
listaLic.push("Colegiul National Ion Neculce");
listaLic.push("Liceul Teoretic Traian");
listaLic.push("Liceul Teoretic Decebal");
listaLic.push("Colegiul Economic Hermes");
listaLic.push("Liceul Teoretic Traian");
listaLic.push("Liceul Teoretic Traian");
listaLic.push("Liceul Greco-Catolic Timotei Cipariu");
listaLic.push("Liceul Teoretic Decebal");
listaLic.push("Liceul Teoretic Dante Alighieri");
listaLic.push("Colegiul Economic Hermes");
listaLic.push("Colegiul Tehnic De Arhitectura Si Lucrari Publice Ioan N. Socolescu");
listaLic.push("Liceul Teoretic Nichita Stanescu");
listaLic.push("Liceul Cu Program Sportiv Mircea Eliade");
listaLic.push("Liceul Teoretic Bilingv Miguel De Cervantes");
listaLic.push("Liceul Teoretic Nichita Stanescu");
listaLic.push("Liceul Teoretic Lucian Blaga");
listaLic.push("Liceul Teoretic C-Tin Brâncoveanu");
listaLic.push("Liceul Teoretic C-Tin Brâncoveanu");
listaLic.push("Colegiul Economic Hermes");
listaLic.push("Colegiul National Iulia HaSdeu");
listaLic.push("Liceul Teoretic C-Tin Brâncoveanu");
listaLic.push("Liceul Teoretic Lucian Blaga");
listaLic.push("Liceul Teoretic Dimitrie Bolintineanu");
listaLic.push("Liceul Teoretic Lucian Blaga");
listaLic.push("Colegiul Economic Costin C. Kiritescu");
listaLic.push("Colegiul Tehnic Petru Maior");
listaLic.push("Liceul Teoretic Traian");
listaLic.push("Colegiul Tehnic Petru Maior");
listaLic.push("Liceul Cu Program Sportiv Mircea Eliade");
listaLic.push("Liceul Teoretic Dimitrie Bolintineanu");
listaLic.push("Colegiul Tehnic Petru Maior");
listaLic.push("Colegiul Economic Costin C. Kiritescu");
listaLic.push("Liceul Teoretic Dimitrie Bolintineanu");
listaLic.push("Liceul Teoretic Lucian Blaga");
listaLic.push("Liceul Teoretic Marin Preda");
listaLic.push("Liceul Teoretic Benjamin Franklin");
listaLic.push("Liceul Teoretic Marin Preda");
listaLic.push("Liceul Teoretic Benjamin Franklin");
listaLic.push("Colegiul Economic A.D. Xenopol");
listaLic.push("Liceul Teoretic Benjamin Franklin");
listaLic.push("Liceul Teoretic C-Tin Brâncoveanu");
listaLic.push("Colegiul Economic A.D. Xenopol");
listaLic.push("Colegiul National Aurel Vlaicu");
listaLic.push("Liceul Teoretic Marin Preda");
listaLic.push("Colegiul National Aurel Vlaicu");
listaLic.push("Liceul Teoretic Bilingv Miguel De Cervantes");
listaLic.push("Liceul Teoretic Mihail Sadoveanu");
listaLic.push("Colegiul German Goethe");
listaLic.push("Liceul Teoretic Dimitrie Bolintineanu");
listaLic.push("Liceul Teoretic Mihail Sadoveanu");
listaLic.push("Colegiul National Victor BabeS");
listaLic.push("Liceul Teoretic Marin Preda");
listaLic.push("Liceul Teoretic Eugen Lovinescu");
listaLic.push("Liceul Teoretic Mihail Sadoveanu");
listaLic.push("Liceul Teoretic Alexandru Vlahuta");
listaLic.push("Colegiul National Octav Onicescu");
listaLic.push("Colegiul National Octav Onicescu");
listaLic.push("Colegiul Romano-Catolic Sf. Iosif");
listaLic.push("Colegiul National Victor BabeS");
listaLic.push("Colegiul National Aurel Vlaicu");
listaLic.push("Liceul Teoretic Eugen Lovinescu");
listaLic.push("Scoala Superioara Comerciala Nicolae Kretzulescu");
listaLic.push("Colegiul National Octav Onicescu");
listaLic.push("Scoala Superioara Comerciala Nicolae Kretzulescu");
listaLic.push("Colegiul National Victor BabeS");
listaLic.push("Liceul Teoretic Eugen Lovinescu");
listaLic.push("Liceul Teoretic Stefan Odobleja");
listaLic.push("Colegiul German Goethe");
listaLic.push("Liceul Teoretic Stefan Odobleja");
listaLic.push("Scoala Superioara Comerciala Nicolae Kretzulescu");
listaLic.push("Liceul Teoretic Tudor Vladimirescu");
listaLic.push("Liceul Teoretic Stefan Odobleja");
listaLic.push("Colegiul Economic V. Madgearu");
listaLic.push("Liceul Teoretic Alexandru Vlahuta");
listaLic.push("Liceul Teologic Adventist Stefan Demetrescu");
listaLic.push("Liceul Teoretic Stefan Odobleja");
listaLic.push("Liceul Teoretic Tudor Vladimirescu");
listaLic.push("Colegiul National Scoala Centrala");
listaLic.push("Liceul Teoretic Tudor Vladimirescu");
listaLic.push("Colegiul National Emil Racovita");
listaLic.push("Liceul Teoretic Alexandru Vlahuta");
listaLic.push("Colegiul National Victor BabeS");
listaLic.push("Liceul Teoretic Dante Alighieri");
listaLic.push("Liceul Teoretic George Calinescu");
listaLic.push("Liceul Teoretic Tudor Vladimirescu");
listaLic.push("Colegiul National Emil Racovita");
listaLic.push("Colegiul Economic V. Madgearu");
listaLic.push("Liceul Teoretic C.A. Rosetti");
listaLic.push("Liceul Teoretic Ion Barbu");
listaLic.push("Liceul Teoretic Bilingv Miguel De Cervantes");
listaLic.push("Colegiul National Ion Neculce");
listaLic.push("Liceul Teoretic Dante Alighieri");
listaLic.push("Liceul Teoretic C.A. Rosetti");
listaLic.push("Liceul Teoretic Dante Alighieri");
listaLic.push("Liceul Teoretic George Calinescu");
listaLic.push("Liceul Teoretic Jean Monnet");
listaLic.push("Liceul Teoretic Ion Barbu");
listaLic.push("Colegiul National Elena Cuza");
listaLic.push("Colegiul National Scoala Centrala");
listaLic.push("Liceul Teoretic C.A. Rosetti");
listaLic.push("Colegiul National Scoala Centrala");
listaLic.push("Colegiul National Elena Cuza");
listaLic.push("Colegiul National Ion Neculce");
listaLic.push("Colegiul National Mihai Eminescu");
listaLic.push("Liceul Teoretic Ion Barbu");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Liceul Teoretic Jean Monnet");
listaLic.push("Liceul Teoretic Bilingv Miguel De Cervantes");
listaLic.push("Colegiul National Ion Neculce");
listaLic.push("Liceul Teoretic Alexandru Ioan Cuza");
listaLic.push("Liceul Teoretic Jean Monnet");
listaLic.push("Colegiul National Mihai Eminescu");
listaLic.push("Liceul Teoretic Nicolae Iorga");
listaLic.push("Colegiul National Mihai Eminescu");
listaLic.push("Colegiul National Ion Neculce");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Scoala Centrala");
listaLic.push("Liceul Teoretic Nicolae Iorga");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Iulia HaSdeu");
listaLic.push("Colegiul National Ion Neculce");
listaLic.push("Colegiul German Goethe");
listaLic.push("Colegiul National Elena Cuza");
listaLic.push("Colegiul National Ion Creanga");
listaLic.push("Colegiul National Mihai Eminescu");
listaLic.push("Liceul Teoretic Alexandru Ioan Cuza");
listaLic.push("Liceul Teoretic Alexandru Ioan Cuza");
listaLic.push("Colegiul National Iulia HaSdeu");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Ion Creanga");
listaLic.push("Liceul Teoretic Nicolae Iorga");
listaLic.push("Colegiul National Grigore Moisil");
listaLic.push("Liceul Teoretic Nicolae Iorga");
listaLic.push("Colegiul National Cantemir Voda");
listaLic.push("Colegiul National Cantemir Voda");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Matei Basarab");
listaLic.push("Colegiul National Ion Creanga");
listaLic.push("Liceul Teoretic Nicolae Iorga");
listaLic.push("Colegiul National Ion Creanga");
listaLic.push("Colegiul National Iulia HaSdeu");
listaLic.push("Colegiul National Iulia HaSdeu");
listaLic.push("Colegiul National Bilingv George CoSbuc");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Matei Basarab");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Grigore Moisil");
listaLic.push("Colegiul National Ion Creanga");
listaLic.push("Colegiul National Matei Basarab");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Matei Basarab");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Spiru Haret");
listaLic.push("Colegiul National Cantemir Voda");
listaLic.push("Colegiul National Gheorghe Sincai");
listaLic.push("Colegiul National Iulia HaSdeu");
listaLic.push("Colegiul National Bilingv George CoSbuc");
listaLic.push("Colegiul National Bilingv George CoSbuc");
listaLic.push("Colegiul National I.L. Caragiale");
listaLic.push("Colegiul National Grigore Moisil");
listaLic.push("Colegiul National Spiru Haret");
listaLic.push("Colegiul National Mihai Viteazul");
listaLic.push("Colegiul National Bilingv George CoSbuc");
listaLic.push("Colegiul National Mihai Viteazul");
listaLic.push("Colegiul National Grigore Moisil");
listaLic.push("Colegiul National Sfântul Sava");
listaLic.push("Colegiul National Gheorghe Sincai");
listaLic.push("Colegiul National Spiru Haret");
listaLic.push("Colegiul National Gheorghe Sincai");
listaLic.push("Colegiul National Gheorghe Lazar");
listaLic.push("Colegiul National Gheorghe Lazar");
listaLic.push("Colegiul National Spiru Haret");
listaLic.push("Colegiul National De Informatica Tudor Vianu");
listaLic.push("Colegiul National De Informatica Tudor Vianu");
listaLic.push("Colegiul National Sfântul Sava");
listaLic.push("Colegiul National Gheorghe Lazar");
listaLic.push("Colegiul National Spiru Haret");
listaLic.push("Colegiul National Sfântul Sava");
listaLic.push("Colegiul National Gheorghe Lazar");
listaLic.push("Colegiul National Sfântul Sava");


///lista profiluri
var listaProf = new Array();
listaProf.push("Filologie");
listaProf.push("Mecanica");
listaProf.push("Mate-info");
listaProf.push("Mecanica");
listaProf.push("Electromecanica");
listaProf.push("Mecanica");
listaProf.push("Mecanica");
listaProf.push("Mecanica");
listaProf.push("Mecanica");
listaProf.push("Constructii: instalatii Si lucrari publice");
listaProf.push("Mecanica");
listaProf.push("Mecanica");
listaProf.push("Mecanica");
listaProf.push("Industrie alimentara");
listaProf.push("Mecanica");
listaProf.push("Constructii: instalatii Si lucrari publice");
listaProf.push("Mecanica");
listaProf.push("Mecanica");
listaProf.push("Agricultura");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Electric");
listaProf.push("Mecanica");
listaProf.push("Protectia mediului");
listaProf.push("Mecanica");
listaProf.push("Fabricarea produselor din lemn");
listaProf.push("Mecanica");
listaProf.push("Turism Si alimentatie");
listaProf.push("Mecanica");
listaProf.push("Protectia mediului");
listaProf.push("Electronica automatizari");
listaProf.push("Turism Si alimentatie");
listaProf.push("Economic");
listaProf.push("Chimie industriala");
listaProf.push("Electronica automatizari");
listaProf.push("Industrie textila Si pielarie");
listaProf.push("Economic");
listaProf.push("Electronica automatizari");
listaProf.push("Protectia mediului");
listaProf.push("Productie media");
listaProf.push("Filologie");
listaProf.push("Electric");
listaProf.push("Productie media");
listaProf.push("Protectia mediului");
listaProf.push("Electromecanica");
listaProf.push("Turism Si alimentatie");
listaProf.push("Turism Si alimentatie");
listaProf.push("Estetica Si igiena corpului omenesc");
listaProf.push("Economic");
listaProf.push("Filologie");
listaProf.push("Turism Si alimentatie");
listaProf.push("Economic");
listaProf.push("Economic");
listaProf.push("Electric");
listaProf.push("Comert");
listaProf.push("Industrie alimentara");
listaProf.push("Turism Si alimentatie");
listaProf.push("Turism Si alimentatie");
listaProf.push("Filologie");
listaProf.push("Economic");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Constructii: instalatii Si lucrari publice");
listaProf.push("Turism Si alimentatie");
listaProf.push("Mecanica");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Economic");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Economic");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Turism Si alimentatie");
listaProf.push("Economic");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Turism Si alimentatie");
listaProf.push("Economic");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Turism Si alimentatie");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Comert");
listaProf.push("Filologie");
listaProf.push("Turism Si alimentatie");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Comert");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Turism Si alimentatie");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Economic");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Turism Si alimentatie");
listaProf.push("Stiinte sociale");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Stiinte Sociale");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Economic");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Turism Si alimentatie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Economic");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte sociale");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Comert");
listaProf.push("Stiinte sociale");
listaProf.push("Economic");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Turism Si alimentatie");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte sociale");
listaProf.push("Economic");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Turism Si alimentatie");
listaProf.push("Filologie");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte sociale");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Cls speciale Matematica-informatica");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Filologie");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Mate-info");
listaProf.push("Stiinte sociale");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte sociale");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Filologie");
listaProf.push("Stiinte sociale");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Stiinte ale Naturii");
listaProf.push("Mate-info");
listaProf.push("Mate-info");


///lista bilingv
var listaBi = new Array();
listaBi.push("romani (rromani)");
listaBi.push("");
listaBi.push("italiana");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("rusa");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("bulgara");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("italiana");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("neogreaca");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("italiana");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("spaniola");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("spaniola");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("spaniola");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("portugheza fara examen");
listaBi.push("");
listaBi.push("germana");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("germana fara examen");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("franceza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("italiana fara examen");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("franceza");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("germana");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("germana fara examen");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("germana");
listaBi.push("");
listaBi.push("germana fara examen");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("engleza");
listaBi.push("engleza");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("germana fara examen");
listaBi.push("");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");
listaBi.push("");
listaBi.push("");
listaBi.push("engleza");


///lista coduri
var listaCod = new Array();
listaCod.push(151);
listaCod.push(285);
listaCod.push(255);
listaCod.push(344);
listaCod.push(291);
listaCod.push(230);
listaCod.push(278);
listaCod.push(173);
listaCod.push(288);
listaCod.push(284);
listaCod.push(340);
listaCod.push(385);
listaCod.push(399);
listaCod.push(341);
listaCod.push(159);
listaCod.push(277);
listaCod.push(390);
listaCod.push(226);
listaCod.push(178);
listaCod.push(210);
listaCod.push(338);
listaCod.push(239);
listaCod.push(281);
listaCod.push(383);
listaCod.push(236);
listaCod.push(347);
listaCod.push(391);
listaCod.push(234);
listaCod.push(237);
listaCod.push(313);
listaCod.push(349);
listaCod.push(287);
listaCod.push(273);
listaCod.push(229);
listaCod.push(395);
listaCod.push(386);
listaCod.push(375);
listaCod.push(315);
listaCod.push(161);
listaCod.push(154);
listaCod.push(312);
listaCod.push(396);
listaCod.push(274);
listaCod.push(169);
listaCod.push(158);
listaCod.push(337);
listaCod.push(290);
listaCod.push(376);
listaCod.push(152);
listaCod.push(377);
listaCod.push(348);
listaCod.push(172);
listaCod.push(382);
listaCod.push(352);
listaCod.push(275);
listaCod.push(350);
listaCod.push(238);
listaCod.push(259);
listaCod.push(240);
listaCod.push(387);
listaCod.push(175);
listaCod.push(177);
listaCod.push(168);
listaCod.push(171);
listaCod.push(351);
listaCod.push(336);
listaCod.push(153);
listaCod.push(176);
listaCod.push(170);
listaCod.push(397);
listaCod.push(235);
listaCod.push(318);
listaCod.push(388);
listaCod.push(345);
listaCod.push(311);
listaCod.push(319);
listaCod.push(289);
listaCod.push(272);
listaCod.push(228);
listaCod.push(233);
listaCod.push(346);
listaCod.push(373);
listaCod.push(149);
listaCod.push(162);
listaCod.push(283);
listaCod.push(310);
listaCod.push(374);
listaCod.push(282);
listaCod.push(166);
listaCod.push(343);
listaCod.push(371);
listaCod.push(150);
listaCod.push(372);
listaCod.push(179);
listaCod.push(167);
listaCod.push(268);
listaCod.push(127);
listaCod.push(223);
listaCod.push(266);
listaCod.push(246);
listaCod.push(225);
listaCod.push(224);
listaCod.push(155);
listaCod.push(265);
listaCod.push(257);
listaCod.push(245);
listaCod.push(174);
listaCod.push(264);
listaCod.push(392);
listaCod.push(148);
listaCod.push(263);
listaCod.push(212);
listaCod.push(134);
listaCod.push(136);
listaCod.push(244);
listaCod.push(189);
listaCod.push(135);
listaCod.push(213);
listaCod.push(328);
listaCod.push(214);
listaCod.push(401);
listaCod.push(380);
listaCod.push(222);
listaCod.push(379);
listaCod.push(393);
listaCod.push(327);
listaCod.push(378);
listaCod.push(400);
listaCod.push(329);
listaCod.push(211);
listaCod.push(363);
listaCod.push(261);
listaCod.push(362);
listaCod.push(260);
listaCod.push(243);
listaCod.push(262);
listaCod.push(133);
listaCod.push(242);
listaCod.push(117);
listaCod.push(361);
listaCod.push(119);
listaCod.push(146);
listaCod.push(216);
listaCod.push(122);
listaCod.push(330);
listaCod.push(215);
listaCod.push(207);
listaCod.push(360);
listaCod.push(370);
listaCod.push(217);
listaCod.push(143);
listaCod.push(306);
listaCod.push(305);
listaCod.push(308);
listaCod.push(209);
listaCod.push(118);
listaCod.push(368);
listaCod.push(269);
listaCod.push(307);
listaCod.push(270);
listaCod.push(208);
listaCod.push(369);
listaCod.push(333);
listaCod.push(121);
listaCod.push(331);
listaCod.push(271);
listaCod.push(367);
listaCod.push(334);
listaCod.push(156);
listaCod.push(144);
listaCod.push(309);
listaCod.push(332);
listaCod.push(366);
listaCod.push(203);
listaCod.push(365);
listaCod.push(205);
listaCod.push(142);
listaCod.push(206);
listaCod.push(258);
listaCod.push(165);
listaCod.push(364);
listaCod.push(204);
listaCod.push(157);
listaCod.push(220);
listaCod.push(326);
listaCod.push(147);
listaCod.push(128);
listaCod.push(256);
listaCod.push(219);
listaCod.push(254);
listaCod.push(164);
listaCod.push(132);
listaCod.push(325);
listaCod.push(355);
listaCod.push(202);
listaCod.push(218);
listaCod.push(201);
listaCod.push(354);
listaCod.push(126);
listaCod.push(295);
listaCod.push(324);
listaCod.push(111);
listaCod.push(131);
listaCod.push(145);
listaCod.push(129);
listaCod.push(253);
listaCod.push(130);
listaCod.push(296);
listaCod.push(140);
listaCod.push(293);
listaCod.push(124);
listaCod.push(112);
listaCod.push(200);
listaCod.push(141);
listaCod.push(110);
listaCod.push(188);
listaCod.push(125);
listaCod.push(120);
listaCod.push(353);
listaCod.push(303);
listaCod.push(294);
listaCod.push(251);
listaCod.push(252);
listaCod.push(190);
listaCod.push(113);
listaCod.push(304);
listaCod.push(138);
listaCod.push(358);
listaCod.push(139);
listaCod.push(182);
listaCod.push(184);
listaCod.push(114);
listaCod.push(249);
listaCod.push(302);
listaCod.push(137);
listaCod.push(300);
listaCod.push(185);
listaCod.push(187);
listaCod.push(198);
listaCod.push(105);
listaCod.push(250);
listaCod.push(109);
listaCod.push(359);
listaCod.push(301);
listaCod.push(248);
listaCod.push(106);
listaCod.push(247);
listaCod.push(107);
listaCod.push(194);
listaCod.push(183);
listaCod.push(299);
listaCod.push(186);
listaCod.push(199);
listaCod.push(197);
listaCod.push(108);
listaCod.push(357);
listaCod.push(195);
listaCod.push(180);
listaCod.push(196);
listaCod.push(181);
listaCod.push(356);
listaCod.push(104);
listaCod.push(298);
listaCod.push(193);
listaCod.push(297);
listaCod.push(322);
listaCod.push(323);
listaCod.push(191);
listaCod.push(116);
listaCod.push(115);
listaCod.push(101);
listaCod.push(321);
listaCod.push(192);
listaCod.push(103);
listaCod.push(320);
listaCod.push(102);

var mate;
var filo;
var socio;
var stiinte;
var toate;


document.getElementById("dezv").onclick = function dezvaluie(){
	mate = 0;
	filo = 0;
	socio = 0;
	stiinte = 0;
	toate = 0;
	if(document.getElementById("all").checked == true){
		toate = 1;
	}
	else{
		if( document.getElementById("mi").checked == true){
			mate = 1;
		}

		if(document.getElementById("sn").checked == true){
			stiinte = 1;
		}

		if( document.getElementById("fi").checked == true){
			filo = 1;
		}

		if( document.getElementById("ss").checked == true){
			socio = 1;
		}
	}
}

document.getElementById("myButton").onclick = function sortare_dupa_pozitie(){
	//dau refresh la rezultate daca a fost apasat din nou butonul
	var ck;
	for(let k = 1; k <= 5; k++)
	{
		ck = k.toString();
		document.getElementById("lic" + ck).innerHTML=("");
	}
	//aici incepe functia efectiv
	var poz = document.getElementById("pozClasament").value;
	poz = parseInt(poz);
	var st = 0;
	var dr = 300;
	var m;
	while( st <= dr)
	{
		m = Math.floor((st + dr) / 2);
		if( poz <= listaPoz[m]) st = m + 1;
		else dr = m - 1;
	}



	if( dr < 0 || poz < 1)
		document.getElementById("lic1").innerHTML = ("Ne pare rau, nu ai media/pozitia necesara pentru a intra la unul dintre liceele din lista noastra:( (sau nu ai completat formularul corect");
	else{
		var i = dr;
		var j = 1;
		var cj = "1";
		while(j <= 5 && i >= 0){
			//document.write(listaSpec[i]);
			//document.write("<br>");
			//document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
			if(toate == 1){
				document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			else if( mate == 1 && listaProf[i] == "Mate-info"){
				document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			else if( filo == 1 && listaProf[i] == "Filologie"){
				document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			if( socio == 1 && listaProf[i] == "Stiinte sociale"){
				document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			else if( stiinte == 1 && listaProf[i] == "Stiinte ale Naturii"){
				document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			i--;
		}
	}
}


document.getElementById("myButton2").onclick = function sortare_dupa_medie() {
	var ck;
	for(let k = 1; k <= 5; k++)
	{
		ck = k.toString();
		document.getElementById("mlic" + ck).innerHTML=("");
	}

	var med = document.getElementById("medClasament").value;
	med = parseFloat(med);
	/*var st = 0;
	var dr = 300;
	var m;
	var sol = -1;
	while( st <= dr)
	{
		m = Math.floor((st + dr) / 2);
		if( med < listaMed[m]){
			dr = m - 1;
		}
		else{
			sol = m;
			st = m + 1;
		}

	}
	
	document.write(sol);*/
	var sol = -1;
	var ok = 1;
	for(k = 0; k <= 300 && ok == 1; k++){
		if( med >= listaMed[k])
			sol = k;
		else ok = 0;
	}

	if( sol == -1 || med > 10.00)
		document.getElementById("mlic1").innerHTML = ("Ne pare rau, nu ai media/pozitia necesara pentru a intra la unul dintre liceele din lista noastra:( (sau nu ai completat formularul corect");
	else{
		var i = sol;
		var j = 1;
		var cj = "1";
		while(j <= 5 && i >= 0){
			//document.write(listaSpec[i]);
			//document.write("<br>");
			//document.getElementById("lic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
			if(toate == 1){
				document.getElementById("mlic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			else if( mate == 1 && listaProf[i] == "Mate-info"){
				document.getElementById("mlic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			else if( filo == 1 && listaProf[i] == "Filologie"){
				document.getElementById("mlic" + cj).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			if( socio == 1 && listaProf[i] == "Stiinte sociale"){
				document.getElementById("mlic" + cj ).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			else if( stiinte == 1 && listaProf[i] == "Stiinte ale Naturii"){
				document.getElementById("mlic" + cj ).innerHTML = (listaLic[i] + " " + listaProf[i] + " " + listaBi[i] + "( Codul este: " + listaCod[i] + " )" );
				j++;
				cj = j.toString();
			}
			i--;
		}
	}
}

